{"version":3,"file":"static/js/502.4efd3f6a.chunk.js","mappings":"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","sources":["components/Heading/Heading.jsx","components/TransactionList/TransactionList.styled.js","components/TransactionList/TransactionHeader/TransactionHeader.jsx","components/TransactionList/TransactionList.jsx","components/TransactionsMobile/TransactionsMobile.styled.js","components/TransactionsMobile/TransactionsMobile.jsx","pages/HomePage/Home.styled.js","pages/HomePage/Home.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nimport React from 'react';\n\nconst HeadingBase = () => {\n  return <h1>Heading</h1>;\n};\n\n//this heading automaticly changes display depending on width so its always there, but visible only when needed\nexport const Heading = styled(HeadingBase)`\n  display: none;\n  color: var(--font-color-dark);\n  font-size: 30px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 1.5;\n\n  @media (min-width: ${props => props.theme.breakpoints.tablet}) {\n    display: inline-block;\n  }\n`;\n\n//example ussage for h1,h2 headings <Heading as=\"h1\">Finance App</Heading> <Heading as=\"h2\">Finance App</Heading>\n","import styled from 'styled-components';\n\nexport const EditButton = styled.button`\n  position: relative;\n  border: none;\n  background: none;\n  width: 24px;\n  height: 24px;\n  cursor: pointer;\n  vertical-align: middle;\n  margin-right: 8px;\n  border: 1px solid transparent;\n  border-radius: 100%;\n  transition: border 150ms;\n\n  & svg {\n    fill: none;\n    stroke: var(--font-color-dark);\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 14px;\n    height: 14px;\n    z-index: 10;\n    transition: stroke 150ms, border 150ms;\n  }\n\n  &:hover {\n    border: 1px solid var(--color-brand-primary);\n    transition: border 75ms;\n\n    svg {\n      stroke: var(--color-brand-primary);\n      transition: stroke 75ms;\n    }\n  }\n`;\nexport const TransactionContainer = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n  max-height: calc(100vh - 300px);\n  overflow: hidden;\n  @media (min-width: ${props => props.theme.breakpoints.tablet}) {\n    max-height: calc(100vh - 470px);\n  }\n  @media (min-width: ${props => props.theme.breakpoints.desktop}) {\n    max-height: calc(100vh - 300px);\n  }\n  overflow-y: auto;\n  overflow-y: auto;\n  width: 100%;\n  &::-webkit-scrollbar {\n    width: 4px;\n  }\n\n  &::-webkit-scrollbar-track {\n    background: transparent;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background: var(--color-logout-button);\n  }\n\n  &::-webkit-scrollbar-thumb:hover {\n    background: var(--color-logout-button);\n  }\n\n  mask-image: linear-gradient(to top, transparent, black),\n    linear-gradient(to left, transparent 4px, black 4px);\n  mask-size: 100% 20000px;\n  mask-position: left bottom;\n  -webkit-mask-image: linear-gradient(to top, transparent, black),\n    linear-gradient(to left, transparent 4px, black 4px);\n  -webkit-mask-size: 100% 20000px;\n  -webkit-mask-position: left bottom;\n  transition: mask-position 0.3s, -webkit-mask-position 0.3s;\n\n  &:hover {\n    -webkit-mask-position: left top;\n    mask-position: left top;\n  }\n\n  li {\n    flex-grow: 1;\n    ul {\n      align-items: center;\n      justify-content: flex-start;\n      list-style: none;\n      margin: 0;\n      padding: 0;\n      padding-left: 20px;\n      overflow: hidden;\n    }\n  }\n`;\nexport const Sum = styled.li`\n  font-weight: 700;\n  color: ${props =>\n    props.$isIncome === true ? 'var(--color-brand-secondary)' : 'var(--color-brand-accent)'};\n`;\nexport const TransactionRow = styled.ul`\n  display: flex;\n  align-items: center;\n  gap: 20px;\n  list-style: none;\n  height: 54px;\n  margin: 0;\n  padding: 0;\n  width: 100%;\n  font-family: Circe;\n  font-size: 16px;\n  font-weight: 400;\n  border-bottom: ${props =>\n    props.$variant === 'border' ? '1px solid var(--background-gray)' : 'none'};\n  box-shadow: ${props =>\n    props.$variant === 'border' ? '0px 1px 0px var(--background-light)' : 'none'};\n  transition: background-color 555ms;\n  &:hover {\n    background-color: #08086412;\n    transition: background-color 25ms;\n  }\n  li {\n    flex: 1;\n    overflow: hidden;\n  }\n  li:nth-child(1) {\n    min-width: 80px;\n    max-width: 80px;\n  }\n  li:nth-child(2) {\n    min-width: 40px;\n    max-width: 40px;\n    text-align: center;\n  }\n  li:nth-child(3) {\n    flex-grow: 2;\n    max-width: 180px;\n    min-width: 180px;\n  }\n  li:nth-child(4) {\n    flex-grow: 3;\n    width: 100%;\n\n    overflow-x: auto;\n    overflow-y: hidden;\n    &::-webkit-scrollbar {\n      display: none;\n    }\n    -ms-overflow-style: none;\n    scrollbar-width: none;\n  }\n  li:nth-child(5) {\n    max-width: 80px;\n    min-width: 80px;\n    margin-left: auto;\n  }\n  li:nth-child(6) {\n    margin-left: auto;\n    min-width: 110px;\n    max-width: 110px;\n  }\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { motion } from 'framer-motion';\nexport const ListFlexbox = styled(motion.ul)`\n  display: flex;\n  flex-direction: row;\n  background-color: #fff;\n  margin: 0;\n  padding: 0;\n  gap: 20px;\n  list-style: none;\n  height: 58px;\n  border-radius: 30px;\n  width: 100%;\n  background-color: #fff;\n  justify-content: fle-start;\n  align-items: center;\n  font-family: Circe;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 700;\n  color: #000;\n  padding-left: 20px;\n  overflow: hidden;\n  li {\n    flex: 1;\n    overflow: hidden;\n  }\n  li:nth-child(1) {\n    min-width: 80px;\n    max-width: 80px;\n  }\n  li:nth-child(2) {\n    min-width: 40px;\n    max-width: 40px;\n    text-align: center;\n  }\n  li:nth-child(3) {\n    flex-grow: 2;\n    max-width: 180px;\n    min-width: 180px;\n  }\n  li:nth-child(4) {\n    flex-grow: 3;\n    width: 100%;\n\n    overflow-x: auto;\n    overflow-y: hidden;\n    &::-webkit-scrollbar {\n      display: none;\n    }\n    -ms-overflow-style: none;\n    scrollbar-width: none;\n  }\n  li:nth-child(5) {\n    max-width: 80px;\n    min-width: 80px;\n    margin-left: auto;\n  }\n  li:nth-child(6) {\n    margin-left: auto;\n    min-width: 110px;\n    max-width: 110px;\n  }\n`;\n\nexport const TransactionHeader = () => {\n  return (\n    <ListFlexbox\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      exit={{ opacity: 0 }}\n      transition={{ delay: 0.1, duration: 0.6, ease: [0.08, 0.82, 0.17, 1] }}\n    >\n      <li>Date</li>\n      <li>Type</li>\n      <li>Category</li>\n      <li>Comment</li>\n      <li>Sum</li>\n      <li></li>\n    </ListFlexbox>\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { formatDate, makeProperDate } from 'utils/formaters';\nimport { removeTransaction, setTransactionToEdit } from 'redux/slices/financeSlice';\nimport { setIsModalEditTransactionOpen } from 'redux/slices/globalSlice';\nimport { formatStringWithSpaces, MakeDecimalPlaces } from 'utils/formaters';\nimport { DeleteButton } from 'components/Buttons/Buttons';\nimport { EditButton, TransactionContainer, TransactionRow, Sum } from './TransactionList.styled';\nimport { TransactionHeader } from './TransactionHeader/TransactionHeader';\nimport { Icon } from 'components/Icon/Icon';\nimport { AnimatePresence, motion } from 'framer-motion';\n\nconst TransactionsTable = () => {\n  const dispatch = useDispatch();\n\n  const handleOpenEditModal = () => {\n    dispatch(setIsModalEditTransactionOpen(true));\n  };\n\n  const { transactions } = useSelector(state => state.finance);\n\n  const sortedTransactions = transactions.slice().sort((a, b) => {\n    return makeProperDate(b.date) - makeProperDate(a.date);\n  });\n\n  const transactionsDeleteHandler = id => {\n    dispatch(removeTransaction(id));\n  };\n\n  const transactionVariants = {\n    hidden: {\n      y: -20,\n      opacity: 0,\n    },\n\n    visible: {\n      y: 0,\n      opacity: 1,\n      transition: {\n        duration: 0.5,\n        type: 'spring',\n        stiffness: 100,\n        damping: 10,\n      },\n    },\n  };\n\n  const itemStyle = {\n    opacity: 0,\n    transformOrigin: 'bottom',\n  };\n\n  return (\n    <>\n      <TransactionHeader />\n      <TransactionContainer>\n        {sortedTransactions.map((transaction, index) => (\n          <AnimatePresence key={transaction._id}>\n            <motion.li\n              key={transaction._id}\n              style={itemStyle}\n              variants={transactionVariants}\n              initial=\"hidden\"\n              animate=\"visible\"\n              exit={{ opacity: 0, height: 0 }}\n              transition={{ duration: 0.3 }}\n            >\n              <div key={transaction._id}>\n                <TransactionRow $variant={index === transactions.length - 1 ? null : 'border'}>\n                  <li>{formatDate(transaction.date)}</li>\n                  <li>{transaction.isIncome ? '+' : '-'}</li>\n                  <li>{transaction.category}</li>\n                  <li>{transaction.comment}</li>\n                  <Sum $isIncome={transaction.isIncome}>\n                    {formatStringWithSpaces(MakeDecimalPlaces(transaction.amount))}\n                  </Sum>\n                  <li>\n                    <EditButton\n                      onClick={() => {\n                        dispatch(setTransactionToEdit(transaction));\n                        handleOpenEditModal();\n                      }}\n                    >\n                      <Icon icon={'icon__edit'} />\n                    </EditButton>\n                    <DeleteButton onClick={() => transactionsDeleteHandler(transaction._id)}>\n                      Delete\n                    </DeleteButton>\n                  </li>\n                </TransactionRow>\n              </div>\n            </motion.li>\n          </AnimatePresence>\n        ))}\n      </TransactionContainer>\n    </>\n  );\n};\n\nexport default TransactionsTable;\n","import styled from 'styled-components';\nimport { motion } from 'framer-motion';\n\nexport const TransactionsList = styled(motion.ul)`\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  max-width: 395px;\n  width: 100%;\n  min-width: 240px;\n`;\n\nexport const TransactionsElement = styled.li``;\n\nexport const TransactionList = styled.ul`\n  background-color: var(--font-color-light);\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  border-radius: 10px;\n  margin-bottom: 8px;\n  position: relative;\n  overflow: hidden;\n\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 5px;\n    background-color: ${props =>\n      props.type ? 'var(--color-brand-secondary)' : 'var(--color-brand-accent)'};\n  }\n`;\n\nexport const TransactionElement = styled.li`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 15px 20px;\n  gap: 30px;\n\n  &:not(:last-child) {\n    border-bottom: 1px solid var(--border-transactions);\n  }\n`;\n\nexport const TransactionHeader = styled.h3`\n  color: var(--font-color-dark);\n  font-family: Circe;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 700;\n  line-height: normal;\n  margin: 0;\n`;\n\nexport const TransactionText = styled.p`\n  color: var(--font-color-dark);\n  text-align: right;\n  font-family: Circe;\n  font-size: 16px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: normal;\n  margin: 0;\n  -ms-word-break: break-all;\n  word-break: break-all;\n  word-break: break-word;\n  -webkit-hyphens: auto;\n  -moz-hyphens: auto;\n  hyphens: auto;\n`;\n\nexport const EditButton = styled.button`\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  gap: 8px;\n  border: none;\n  background: none;\n  cursor: pointer;\n  vertical-align: middle;\n  padding: 0;\n  transition: color 150ms;\n\n  & svg {\n    fill: none;\n    stroke: var(--font-color-dark);\n    width: 14px;\n    height: 14px;\n    transition: stroke 150ms;\n  }\n\n  &:hover {\n    color: var(--color-brand-primary);\n\n    svg {\n      stroke: var(--color-brand-primary);\n    }\n  }\n`;\n","import { Icon } from 'components/Icon/Icon';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { formatDate, makeProperDate, truncateString } from 'utils/formaters';\nimport { removeTransaction, setTransactionToEdit } from 'redux/slices/financeSlice';\nimport { setIsModalEditTransactionOpen } from 'redux/slices/globalSlice';\nimport { formatStringWithSpaces, MakeDecimalPlaces } from 'utils/formaters';\nimport { DeleteButton } from 'components/Buttons/Buttons';\nimport {\n  EditButton,\n  TransactionElement,\n  TransactionHeader,\n  TransactionList,\n  TransactionText,\n  TransactionsElement,\n  TransactionsList,\n} from './TransactionsMobile.styled';\nimport { AnimatePresence } from 'framer-motion';\nconst headers = ['Date', 'Type', 'Category', 'Comment', 'Sum', ''];\n\nconst TransactionsMobile = () => {\n  const dispatch = useDispatch();\n\n  const { transactions } = useSelector(state => state.finance);\n\n  const sortedTransactions = transactions.slice().sort((a, b) => {\n    return makeProperDate(b.date) - makeProperDate(a.date);\n  });\n\n  const handleOpenEditModal = () => {\n    dispatch(setIsModalEditTransactionOpen(true));\n  };\n\n  const TransactionsDeleteHandler = id => {\n    dispatch(removeTransaction(id));\n  };\n\n  const transactionVariants = {\n    hidden: {\n      y: '100%',\n      opacity: 0,\n    },\n    visible: {\n      y: 0,\n      opacity: 1,\n    },\n  };\n\n  return (\n    <AnimatePresence>\n      <TransactionsList\n        variants={transactionVariants}\n        initial=\"hidden\"\n        animate=\"visible\"\n        exit={{ opacity: 0, height: 0 }}\n        transition={{\n          duration: 0.5,\n          ease: [0.6, 0.05, 0.01, 0.9],\n        }}\n        style={{ transformOrigin: 'bottom' }}\n      >\n        {sortedTransactions.map(transaction => (\n          <TransactionsElement key={transaction._id}>\n            <TransactionList type={transaction.isIncome ? 1 : 0}>\n              <TransactionElement>\n                <TransactionHeader>{headers[0]}</TransactionHeader>\n                <TransactionText>{formatDate(transaction.date)}</TransactionText>\n              </TransactionElement>\n              <TransactionElement>\n                <TransactionHeader>{headers[1]}</TransactionHeader>\n                <TransactionText>{transaction.isIncome ? '+' : '-'}</TransactionText>\n              </TransactionElement>\n              <TransactionElement>\n                <TransactionHeader>{headers[2]}</TransactionHeader>\n                <TransactionText>{transaction.category}</TransactionText>\n              </TransactionElement>\n              <TransactionElement>\n                <TransactionHeader>{headers[3]}</TransactionHeader>\n                <TransactionText>{truncateString(transaction.comment)}</TransactionText>\n              </TransactionElement>\n              <TransactionElement>\n                <TransactionHeader>{headers[4]}</TransactionHeader>\n                <TransactionText\n                  style={{\n                    color: `${\n                      transaction.isIncome\n                        ? 'var(--color-brand-secondary)'\n                        : 'var(--color-brand-accent)'\n                    }`,\n                  }}\n                >\n                  {formatStringWithSpaces(MakeDecimalPlaces(transaction.amount))}\n                </TransactionText>\n              </TransactionElement>\n              <TransactionElement>\n                <DeleteButton onClick={() => TransactionsDeleteHandler(transaction._id)}>\n                  Delete\n                </DeleteButton>\n                <EditButton\n                  type=\"button\"\n                  onClick={() => {\n                    dispatch(setTransactionToEdit(transaction));\n                    handleOpenEditModal();\n                  }}\n                >\n                  <Icon icon=\"icon__edit\" />\n                  Edit\n                </EditButton>\n              </TransactionElement>\n            </TransactionList>\n          </TransactionsElement>\n        ))}\n      </TransactionsList>\n    </AnimatePresence>\n  );\n};\n\nexport default TransactionsMobile;\n","import { Heading } from 'components/Heading/Heading';\nimport styled from 'styled-components';\n\nexport const Title = styled(Heading)`\n  display: none;\n  padding: 0;\n  margin-bottom: 0;\n  width: 100%;\n`;\n","import { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport Transactions from 'components/TransactionList/TransactionList';\nimport TransactionsMobile from 'components/TransactionsMobile/TransactionsMobile';\nimport { fetchTransactions } from 'redux/slices/financeSlice';\nimport { Title } from './Home.styled';\nimport ButtonAddTransaction from 'components/ButtonAddTransaction/ButtonAddTransaction';\n\nconst DashboardPage = () => {\n  const dispatch = useDispatch();\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth > 767);\n\n  useEffect(() => {\n    dispatch(fetchTransactions());\n  }, [dispatch]);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowWidth(window.innerWidth > 767);\n    };\n    window.addEventListener('resize', handleResize);\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [windowWidth]);\n  return (\n    <>\n      <Title as=\"h1\">DashboardPage</Title>\n      {windowWidth ? <Transactions /> : <TransactionsMobile />}\n      {!windowWidth && <ButtonAddTransaction />}\n    </>\n  );\n};\n\nexport default DashboardPage;\n"],"names":["Heading","styled","_jsx","children","_templateObject","_taggedTemplateLiteral","props","theme","breakpoints","tablet","EditButton","button","TransactionContainer","ul","_templateObject2","desktop","Sum","li","_templateObject3","$isIncome","TransactionRow","_templateObject4","$variant","ListFlexbox","motion","TransactionHeader","_jsxs","initial","opacity","animate","exit","transition","delay","duration","ease","dispatch","useDispatch","transactions","useSelector","state","finance","sortedTransactions","slice","sort","a","b","makeProperDate","date","transactionVariants","hidden","y","visible","type","stiffness","damping","itemStyle","transformOrigin","_Fragment","map","transaction","index","AnimatePresence","style","variants","height","length","formatDate","isIncome","category","comment","formatStringWithSpaces","MakeDecimalPlaces","amount","onClick","setTransactionToEdit","setIsModalEditTransactionOpen","Icon","icon","DeleteButton","id","_id","removeTransaction","TransactionsList","TransactionsElement","TransactionList","TransactionElement","h3","_templateObject5","TransactionText","p","_templateObject6","_templateObject7","headers","truncateString","color","concat","Title","_useState","useState","window","innerWidth","_useState2","_slicedToArray","windowWidth","setWindowWidth","useEffect","fetchTransactions","handleResize","addEventListener","removeEventListener","as","Transactions","TransactionsMobile","ButtonAddTransaction"],"sourceRoot":""}